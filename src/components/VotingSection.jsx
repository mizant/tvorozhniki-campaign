import React, { useState, useEffect } from 'react'
import { 
  hasUserVoted, 
  recordVote, 
  checkIndexedDBVotes,
  isValidEmail,
  generateVerificationCode,
  storePendingVote,
  verifyPendingVote,
  clearAllVoteData
} from '../utils/voteTracker'
import { clearAllVotingData } from '../utils/voteDataAnalyzer'

const VotingSection = ({ onVote, hasVoted }) => {
  const [selectedOption, setSelectedOption] = useState('')
  const [showForm, setShowForm] = useState(false)
  const [showVerification, setShowVerification] = useState(false)
  const [verificationCode, setVerificationCode] = useState('')
  const [voteStatus, setVoteStatus] = useState({ hasVoted: false, voteData: null })
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const [voterInfo, setVoterInfo] = useState({
    name: '',
    city: '',
    email: ''
  })

  // Check for existing votes on component mount
  useEffect(() => {
    const checkExistingVote = async () => {
      const voteCheck = hasUserVoted()
      const indexedDBCheck = await checkIndexedDBVotes()
      
      if (voteCheck.hasVoted || indexedDBCheck) {
        setVoteStatus({ 
          hasVoted: true, 
          voteData: voteCheck.voteData,
          detectionMethods: voteCheck.detectionMethods
        })
      }
    }
    
    checkExistingVote()
  }, [])

  const handleVoteClick = () => {
    if (selectedOption && !voteStatus.hasVoted) {
      setShowForm(true)
      setError('')
    }
  }

  const handleSubmitVote = async (e) => {
    e.preventDefault()
    if (!voterInfo.name || !voterInfo.city) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è')
      return
    }

    setLoading(true)
    setError('')

    const voteData = {
      choice: selectedOption,
      name: voterInfo.name,
      city: voterInfo.city,
      email: voterInfo.email
    }

    // If email is provided, use email verification
    if (voterInfo.email && isValidEmail(voterInfo.email)) {
      const code = generateVerificationCode()
      storePendingVote(voteData, code)
      
      // Simulate sending email (in real app, this would call your backend)
      console.log(`Verification code for ${voterInfo.email}: ${code}`)
      
      // In development, also store the code for display
      if (process.env.NODE_ENV === 'development') {
        setVerificationCode('')  // Clear any existing code
        // Store the generated code temporarily for development display
        window.devVerificationCode = code
      }
      
      setShowForm(false)
      setShowVerification(true)
      setLoading(false)
    } else {
      // Direct vote without email verification
      try {
        const finalVote = recordVote(voteData)
        setVoteStatus({ hasVoted: true, voteData: finalVote })
        onVote()
        setShowForm(false)
      } catch (error) {
        setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
      }
      setLoading(false)
    }
  }

  const handleVerificationSubmit = (e) => {
    e.preventDefault()
    setLoading(true)
    setError('')

    const result = verifyPendingVote(verificationCode)
    
    if (result.success) {
      setVoteStatus({ hasVoted: true, voteData: result.vote })
      onVote()
      setShowVerification(false)
    } else {
      setError(result.error)
    }
    
    setLoading(false)
  }

  const handleInputChange = (e) => {
    setVoterInfo({
      ...voterInfo,
      [e.target.name]: e.target.value
    })
  }

  const handleShare = (platform) => {
    const shareData = {
      title: '–¢–í–û–†–û–ñ–ù–ò–ö–ò, –ù–ï –°–´–†–ù–ò–ö–ò! –ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–∏–º–æ–≥–æ –±–ª—é–¥–∞',
      text: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –ª—é–±–∏–º–æ–≥–æ –±–ª—é–¥–∞ –∏–∑ —Ç–≤–æ—Ä–æ–≥–∞!',
      url: 'https://—Ç–≤–æ—Ä–æ–∂–Ω–∏–∫–∏.—Ä—Ñ/'
    };

    // Try Web Share API first (modern browsers)
    if (navigator.share) {
      navigator.share(shareData)
        .then(() => {
          console.log('–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å —á–µ—Ä–µ–∑ Web Share API');
        })
        .catch((error) => {
          console.log('Web Share API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', error);
          // Fallback to traditional sharing methods
          fallbackShare(platform, shareData);
        });
    } else {
      // Fallback for older browsers
      fallbackShare(platform, shareData);
    }
  };

  const fallbackShare = (platform, shareData) => {
    let shareUrl;
    
    try {
      switch (platform) {
        case 'vk':
          shareUrl = `https://vk.com/share.php?url=${encodeURIComponent(shareData.url)}&title=${encodeURIComponent(shareData.title)}&description=${encodeURIComponent(shareData.text)}`;
          break;
        case 'telegram':
          shareUrl = `https://t.me/share/url?url=${encodeURIComponent(shareData.url)}&text=${encodeURIComponent(shareData.text)}`;
          break;
        case 'whatsapp':
          shareUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(shareData.text + ' ' + shareData.url)}`;
          break;
        default:
          // Copy to clipboard as fallback
          copyToClipboard(`${shareData.text} ${shareData.url}`);
          alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
          return;
      }

      // Open in new window/tab with error handling
      const popup = window.open(shareUrl, '_blank', 'width=600,height=400');
      
      // Check if popup was blocked
      if (!popup || popup.closed || typeof popup.closed === 'undefined') {
        // Popup blocked, copy to clipboard as final fallback
        copyToClipboard(`${shareData.text} ${shareData.url}`);
        alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞! –í—ã –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å –µ—ë –≤ —Å–æ—Ü—Å–µ—Ç—å.');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:', error);
      // Final fallback - copy to clipboard
      copyToClipboard(`${shareData.text} ${shareData.url}`);
      alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞! –í—ã –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å –µ—ë –≤ —Å–æ—Ü—Å–µ—Ç—å.');
    }
  };

  const copyToClipboard = (text) => {
    if (navigator.clipboard && window.isSecureContext) {
      navigator.clipboard.writeText(text)
        .then(() => {
          console.log('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
        })
        .catch((error) => {
          console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞:', error);
          // Fallback for older browsers
          fallbackCopyTextToClipboard(text);
        });
    } else {
      fallbackCopyTextToClipboard(text);
    }
  };

  const fallbackCopyTextToClipboard = (text) => {
    const textArea = document.createElement('textarea');
    textArea.value = text;
    
    // Avoid scrolling to bottom
    textArea.style.top = "0";
    textArea.style.left = "0";
    textArea.style.position = "fixed";
    textArea.style.opacity = "0";
    
    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();
    
    try {
      const successful = document.execCommand('copy');
      if (successful) {
        console.log('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
      } else {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞:', error);
    }
    
    document.body.removeChild(textArea);
  };

  return (
    <section id="vote" className="voting-section">
      <div className="container">
        <h2>üó≥Ô∏è –í–∞—à –≥–æ–ª–æ—Å –≤–∞–∂–µ–Ω!</h2>
        
        {voteStatus.hasVoted ? (
          // User has already voted
          <div className="vote-success">
            <div className="success-message">
              <h3>üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≥–æ–ª–æ—Å!</h3>
              {voteStatus.voteData && (
                <div className="vote-details">
                  <p>–í–∞—à –≤—ã–±–æ—Ä: <strong>{voteStatus.voteData.choice === 'tvorozhniki' ? '–¢–í–û–†–û–ñ–ù–ò–ö–ò' : '–°–´–†–ù–ò–ö–ò'}</strong></p>
                  <p>–í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {new Date(voteStatus.voteData.timestamp).toLocaleString('ru-RU')}</p>
                </div>
              )}
              <p>–í–∞—à –≥–æ–ª–æ—Å —É—á—Ç—ë–Ω. –í–º–µ—Å—Ç–µ –º—ã –∏–∑–º–µ–Ω–∏–º –∏—Å—Ç–æ—Ä–∏—é —Ä—É—Å—Å–∫–æ–π –∫—É—Ö–Ω–∏!</p>
              
              {voteStatus.detectionMethods && (
                <div className="detection-info">
                  <details>
                    <summary>–ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è</summary>
                    <p>–í–∞—à –≥–æ–ª–æ—Å –±—ã–ª –æ–±–Ω–∞—Ä—É–∂–µ–Ω —Å –ø–æ–º–æ—â—å—é:</p>
                    <ul>
                      {voteStatus.detectionMethods.localStorage && <li>‚úì –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –±—Ä–∞—É–∑–µ—Ä–∞</li>}
                      {voteStatus.detectionMethods.sessionStorage && <li>‚úì –°–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ</li>}
                      {voteStatus.detectionMethods.fingerprint && <li>‚úì –û—Ç–ø–µ—á–∞—Ç–æ–∫ –±—Ä–∞—É–∑–µ—Ä–∞</li>}
                    </ul>
                  </details>
                </div>
              )}
              
              <div className="success-action">
                <p>–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –¥—Ä—É–∑—å—è–º:</p>
                <div className="share-buttons">
                  <button 
                    className="share-button vk" 
                    onClick={() => handleShare('vk')}
                  >
                    –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                  </button>
                  <button 
                    className="share-button telegram" 
                    onClick={() => handleShare('telegram')}
                  >
                    Telegram
                  </button>
                  <button 
                    className="share-button whatsapp" 
                    onClick={() => handleShare('whatsapp')}
                  >
                    WhatsApp
                  </button>
                </div>
              </div>
            </div>
          </div>
        ) : showVerification ? (
          // Email verification step
          <div className="verification-section">
            <div className="verification-form">
              <h3>üìß –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email</h3>
              <p>–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ <strong>{voterInfo.email}</strong></p>
              <p className="verification-note">
                –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ –ø–∏—Å—å–º–∞, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à –≥–æ–ª–æ—Å:
              </p>
              
              {/* Development: Show verification code directly */}
              {process.env.NODE_ENV === 'development' && window.devVerificationCode && (
                <div className="dev-verification-display">
                  <h4>üß™ –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</h4>
                  <p>–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: <strong className="verification-code-display">{window.devVerificationCode}</strong></p>
                  <p><small>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ –≤—ã—à–µ ‚Üë</small></p>
                </div>
              )}
              
              <form onSubmit={handleVerificationSubmit}>
                <div className="verification-input-group">
                  <input
                    type="text"
                    value={verificationCode}
                    onChange={(e) => setVerificationCode(e.target.value.toUpperCase())}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ABC12DEF)"
                    maxLength={8}
                    required
                    className="verification-input"
                  />
                  {/* Development: Auto-fill button */}
                  {process.env.NODE_ENV === 'development' && window.devVerificationCode && (
                    <button 
                      type="button"
                      onClick={() => setVerificationCode(window.devVerificationCode)}
                      className="auto-fill-button"
                    >
                      ü™Ñ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
                    </button>
                  )}
                </div>
                
                {error && <div className="error-message">{error}</div>}
                
                <div className="verification-buttons">
                  <button 
                    type="button" 
                    onClick={() => setShowVerification(false)}
                    className="back-button"
                  >
                    ‚Üê –ù–∞–∑–∞–¥
                  </button>
                  <button 
                    type="submit" 
                    disabled={loading || !verificationCode}
                    className="verify-button"
                  >
                    {loading ? '–ü—Ä–æ–≤–µ—Ä–∫–∞...' : '‚úì –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≥–æ–ª–æ—Å'}
                  </button>
                </div>
              </form>
              
              <div className="verification-help">
                <p>–ù–µ –ø–æ–ª—É—á–∏–ª–∏ –∫–æ–¥? –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º" –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.</p>
              </div>
            </div>
          </div>
        ) : (
          // Normal voting flow
          <div className="voting-content">
            <p className="voting-description">
              –ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É –ø–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—é —Å—ã—Ä–Ω–∏–∫–æ–≤ –≤ —Ç–≤–æ—Ä–æ–∂–Ω–∏–∫–∏! 
              –í–∞—à –≥–æ–ª–æ—Å –ø–æ–º–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫—É—é —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å.
            </p>

            {!showForm ? (
              <div className="vote-options">
                <h3>–ö–∞–∫ –¥–æ–ª–∂–Ω–æ –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è –±–ª—é–¥–æ –∏–∑ —Ç–≤–æ—Ä–æ–≥–∞?</h3>
                
                <div className="option-cards">
                  <label className={`option-card ${selectedOption === 'tvorozhniki' ? 'selected' : ''}`}>
                    <input
                      type="radio"
                      name="vote"
                      value="tvorozhniki"
                      checked={selectedOption === 'tvorozhniki'}
                      onChange={(e) => setSelectedOption(e.target.value)}
                    />
                    <div className="option-content">
                      <h4>üßÄ –¢–í–û–†–û–ñ–ù–ò–ö–ò</h4>
                      <p>–õ–æ–≥–∏—á–Ω–æ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–Ω—è—Ç–Ω–æ!</p>
                      <p className="option-description">
                        –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–º—É –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É ‚Äî —Ç–≤–æ—Ä–æ–≥—É
                      </p>
                    </div>
                  </label>

                  <label className={`option-card ${selectedOption === 'syrniki' ? 'selected' : ''}`}>
                    <input
                      type="radio"
                      name="vote"
                      value="syrniki"
                      checked={selectedOption === 'syrniki'}
                      onChange={(e) => setSelectedOption(e.target.value)}
                    />
                    <div className="option-content">
                      <h4>ü§∑‚Äç‚ôÇÔ∏è –°–´–†–ù–ò–ö–ò</h4>
                      <p>–ö–∞–∫ –µ—Å—Ç—å, —Ç–∞–∫ –∏ –æ—Å—Ç–∞–≤–∏–º</p>
                      <p className="option-description">
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ, —Ö–æ—Ç—å –∏ –Ω–µ—Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
                      </p>
                    </div>
                  </label>
                </div>

                <button 
                  className="vote-button"
                  onClick={handleVoteClick}
                  disabled={!selectedOption}
                >
                  {selectedOption ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ ‚Üí' : '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç'}
                </button>
              </div>
            ) : (
              <form className="voter-form" onSubmit={handleSubmitVote}>
                <h3>–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ! –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥:</h3>
                <p>–ß—Ç–æ–±—ã –≤–∞—à –≥–æ–ª–æ—Å –±—ã–ª –∑–∞—Å—á–∏—Ç–∞–Ω, —É–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ:</p>
                
                {error && <div className="error-message">{error}</div>}
                
                <div className="form-group">
                  <label htmlFor="name">–ò–º—è *</label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    value={voterInfo.name}
                    onChange={handleInputChange}
                    required
                    placeholder="–í–∞—à–µ –∏–º—è"
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="city">–ì–æ—Ä–æ–¥ *</label>
                  <input
                    type="text"
                    id="city"
                    name="city"
                    value={voterInfo.city}
                    onChange={handleInputChange}
                    required
                    placeholder="–í–∞—à –≥–æ—Ä–æ–¥"
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="email">Email</label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={voterInfo.email}
                    onChange={handleInputChange}
                    placeholder="–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≥–æ–ª–æ—Å–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
                  />
                  <div className="email-info">
                    <small>
                      üìß –° email: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ–¥ (–Ω–∞–¥—ë–∂–Ω–µ–µ)<br/>
                      üöÄ –ë–µ–∑ email: –±—ã—Å—Ç—Ä–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ (–º–µ–Ω–µ–µ –∑–∞—â–∏—â–µ–Ω–æ)
                    </small>
                  </div>
                </div>

                <div className="vote-summary">
                  <p><strong>–í–∞—à –≤—ã–±–æ—Ä:</strong> {selectedOption === 'tvorozhniki' ? '–¢–í–û–†–û–ñ–ù–ò–ö–ò' : '–°–´–†–ù–ò–ö–ò'}</p>
                </div>

                <div className="form-buttons">
                  <button type="button" onClick={() => setShowForm(false)} className="back-button">
                    ‚Üê –ù–∞–∑–∞–¥
                  </button>
                  <button 
                    type="submit" 
                    disabled={loading}
                    className="submit-vote-button"
                  >
                    {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : (voterInfo.email ? 'üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥' : 'üó≥Ô∏è –û—Ç–¥–∞—Ç—å –≥–æ–ª–æ—Å!')}
                  </button>
                </div>
              </form>
            )}
          </div>
        )}
      </div>
    </section>
  )
}

export default VotingSection